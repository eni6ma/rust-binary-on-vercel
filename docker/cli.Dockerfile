# Build a static Linux binary for the Rust CLI using cargo-zigbuild
# Use a prebuilt image that already contains zig and cargo-zigbuild

FROM ghcr.io/messense/cargo-zigbuild:latest AS builder
WORKDIR /work

# Cache dependencies efficiently (only copy Cargo.toml, not Cargo.lock)
COPY rust-cli/Cargo.toml ./rust-cli/
RUN mkdir -p rust-cli/src \
	&& echo "fn main(){}" > rust-cli/src/main.rs \
	&& cd rust-cli \
	&& cargo zigbuild --release --target x86_64-unknown-linux-musl || true

# Now copy the real sources and build (exclude Cargo.lock)
COPY rust-cli/src/ ./rust-cli/src/
WORKDIR /work/rust-cli
# Build with fresh lockfile generated by container's Cargo
RUN cargo zigbuild --release --target x86_64-unknown-linux-musl

# Export stage: keep only the compiled binary at a known path
FROM scratch AS export
COPY --from=builder /work/rust-cli/target/x86_64-unknown-linux-musl/release/cli /cli